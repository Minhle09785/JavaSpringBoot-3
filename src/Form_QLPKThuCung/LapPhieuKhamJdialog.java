/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Form_QLPKThuCung;

import Class_entity.PhieuKham;

import Dao.PhieuKhamDao;
import TienIch.ImageHelper;
import TienIch.MsgBox;
import TienIch.XDate;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import TienIch.Auth;
import static TienIch.ColorHelper.setBackround;
import java.awt.Color;

import static TienIch.ValidateHelper.Black;
import static TienIch.ValidateHelper.Color;
import static TienIch.ValidateHelper.Gray;
import static TienIch.ValidateHelper.Italic;
import static TienIch.ValidateHelper.Plain;
import java.awt.Cursor;

import java.sql.*;

/**
 *
 * @author User
 */
public class LapPhieuKhamJdialog extends javax.swing.JDialog {

    /**
     * Creates new form LapPhieuKhamJdialog
     *
     * @param parent
     * @param modal
     */
    public LapPhieuKhamJdialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.init();

    }
    private static String driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    private static String dburl = "jdbc:sqlserver://localhost:1433;database=QLPKTC_Nhom06";
    private static String username1 = "sa";
    private static String password = "songlong";

    Connection con1 = null;
    ResultSet rs1 = null;
    PreparedStatement pst = null;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblBacSi = new javax.swing.JLabel();
        lblMaTC = new javax.swing.JLabel();
        lblMaPK = new javax.swing.JLabel();
        txtMaPhieuKham = new javax.swing.JTextField();
        lblNgayKham = new javax.swing.JLabel();
        txtNgayKham = new javax.swing.JTextField();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnCapNhat = new javax.swing.JButton();
        btnHuy = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblLapPhieuKham = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        txtYeuCauKham = new javax.swing.JTextField();
        lblYeUCauKham = new javax.swing.JLabel();
        lbkNhanVien = new javax.swing.JLabel();
        txtNhanVien = new javax.swing.JTextField();
        lblMaPKToa = new javax.swing.JLabel();
        cboBaSi = new javax.swing.JComboBox<>();
        lblMaDV = new javax.swing.JLabel();
        cboMaTC = new javax.swing.JComboBox<>();
        cboMPKhamToa = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 153));
        jLabel1.setText("Lập Phiếu Khám");

        lblBacSi.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblBacSi.setForeground(new java.awt.Color(0, 153, 102));
        lblBacSi.setText("Mã Bác Sĩ :");

        lblMaTC.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblMaTC.setForeground(new java.awt.Color(0, 153, 102));
        lblMaTC.setText("Mã Thú cưng:");

        lblMaPK.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblMaPK.setForeground(new java.awt.Color(0, 153, 102));
        lblMaPK.setText("Mã phiếu khám :");

        txtMaPhieuKham.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtMaPhieuKham.setForeground(new java.awt.Color(153, 153, 153));
        txtMaPhieuKham.setPreferredSize(new java.awt.Dimension(60, 25));
        txtMaPhieuKham.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtMaPhieuKhamFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMaPhieuKhamFocusLost(evt);
            }
        });

        lblNgayKham.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblNgayKham.setForeground(new java.awt.Color(0, 153, 102));
        lblNgayKham.setText("Ngày khám :");

        txtNgayKham.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtNgayKham.setForeground(new java.awt.Color(153, 153, 153));
        txtNgayKham.setText("VD: 16/04/2021");
        txtNgayKham.setPreferredSize(new java.awt.Dimension(7, 25));
        txtNgayKham.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNgayKhamFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNgayKhamFocusLost(evt);
            }
        });

        btnThem.setBackground(new java.awt.Color(0, 102, 0));
        btnThem.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnThem.setForeground(new java.awt.Color(255, 255, 255));
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icon/thêm.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnThemMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnThemMouseExited(evt);
            }
        });
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnXoa.setBackground(new java.awt.Color(0, 102, 0));
        btnXoa.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnXoa.setForeground(new java.awt.Color(255, 255, 255));
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icon/xóa.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                btnXoaFocusGained(evt);
            }
        });
        btnXoa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnXoaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnXoaMouseExited(evt);
            }
        });
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnCapNhat.setBackground(new java.awt.Color(0, 102, 0));
        btnCapNhat.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnCapNhat.setForeground(new java.awt.Color(255, 255, 255));
        btnCapNhat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icon/sữa.png"))); // NOI18N
        btnCapNhat.setText("Cập Nhật");
        btnCapNhat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCapNhatMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCapNhatMouseExited(evt);
            }
        });
        btnCapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatActionPerformed(evt);
            }
        });

        btnHuy.setBackground(new java.awt.Color(0, 102, 51));
        btnHuy.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnHuy.setForeground(new java.awt.Color(255, 255, 255));
        btnHuy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icon/Mới.png"))); // NOI18N
        btnHuy.setText("Mới");
        btnHuy.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnHuyMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnHuyMouseExited(evt);
            }
        });
        btnHuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyActionPerformed(evt);
            }
        });

        tblLapPhieuKham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã Phiếu khám", "Yêu cầu khám", "Ngày khám", "Mã Bác sĩ", "Mã nhân viên", "Mã thú cưng", "Mã phiếu khám toa"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblLapPhieuKham.setRowHeight(25);
        tblLapPhieuKham.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                tblLapPhieuKhamMouseMoved(evt);
            }
        });
        tblLapPhieuKham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblLapPhieuKhamMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblLapPhieuKham);

        txtYeuCauKham.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtYeuCauKham.setForeground(new java.awt.Color(153, 153, 153));
        txtYeuCauKham.setPreferredSize(new java.awt.Dimension(60, 25));
        txtYeuCauKham.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtYeuCauKhamFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtYeuCauKhamFocusLost(evt);
            }
        });

        lblYeUCauKham.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblYeUCauKham.setForeground(new java.awt.Color(0, 153, 102));
        lblYeUCauKham.setText("Yêu cầu khám :");

        lbkNhanVien.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbkNhanVien.setForeground(new java.awt.Color(0, 153, 102));
        lbkNhanVien.setText("Mã nhân viên :");

        txtNhanVien.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtNhanVien.setForeground(new java.awt.Color(153, 153, 153));
        txtNhanVien.setPreferredSize(new java.awt.Dimension(7, 25));
        txtNhanVien.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNhanVienFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNhanVienFocusLost(evt);
            }
        });

        lblMaPKToa.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblMaPKToa.setForeground(new java.awt.Color(0, 153, 102));
        lblMaPKToa.setText("Mã phiếu khám toa :");

        cboBaSi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chọn :" }));
        cboBaSi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cboBaSiMouseClicked(evt);
            }
        });
        cboBaSi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboBaSiActionPerformed(evt);
            }
        });

        cboMaTC.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chọn :" }));

        cboMPKhamToa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chọn :" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblBacSi)
                                    .addComponent(lblMaTC))
                                .addGap(52, 52, 52)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(cboMaTC, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(38, 38, 38))
                                    .addComponent(cboBaSi, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblMaPKToa)
                                    .addComponent(lblYeUCauKham))
                                .addGap(12, 12, 12)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtMaPhieuKham, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cboMPKhamToa, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtYeuCauKham, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblNgayKham, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbkNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtNgayKham, javax.swing.GroupLayout.DEFAULT_SIZE, 277, Short.MAX_VALUE)
                                    .addComponent(txtNhanVien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(85, 85, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnHuy, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel6)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(btnCapNhat))))))
                        .addGap(28, 28, 28))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(336, 336, 336)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblMaPK)))
                .addGap(0, 351, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblMaDV)
                .addGap(241, 241, 241))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6)
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblBacSi)
                            .addComponent(lblNgayKham)
                            .addComponent(cboBaSi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(txtNgayKham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblMaTC)
                        .addComponent(cboMaTC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbkNhanVien))
                .addGap(0, 18, Short.MAX_VALUE)
                .addComponent(lblMaDV)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnHuy, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblMaPKToa)
                            .addComponent(cboMPKhamToa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMaPK)
                            .addComponent(txtMaPhieuKham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblYeUCauKham)
                            .addComponent(txtYeuCauKham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(61, 61, 61)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblLapPhieuKhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblLapPhieuKhamMouseClicked
        if (evt.getClickCount() == 1) {// (2):nhấndup 2 làn hien len 
            this.row = tblLapPhieuKham.getSelectedRow();
            cboBaSi.setSelectedItem(ABORT);
            this.edit();
        }
    }//GEN-LAST:event_tblLapPhieuKhamMouseClicked

    private void btnHuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyActionPerformed
        this.clearForm();
    }//GEN-LAST:event_btnHuyActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        if (check_Form()) {
            this.insert();
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        this.delete();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnCapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatActionPerformed
        if (check_Form()) {
            this.update();
        }
    }//GEN-LAST:event_btnCapNhatActionPerformed

    private void btnThemMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThemMouseExited
        setBackround(new Color(0, 102, 0), Color.white, btnThem);
    }//GEN-LAST:event_btnThemMouseExited

    private void btnThemMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThemMouseEntered

        setBackround(new Color(255, 204, 204), Color.white, btnThem);
    }//GEN-LAST:event_btnThemMouseEntered

    private void btnXoaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnXoaFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_btnXoaFocusGained

    private void txtNhanVienFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNhanVienFocusGained

    }//GEN-LAST:event_txtNhanVienFocusGained

    private void txtNhanVienFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNhanVienFocusLost

    }//GEN-LAST:event_txtNhanVienFocusLost

    private void txtMaPhieuKhamFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMaPhieuKhamFocusGained

    }//GEN-LAST:event_txtMaPhieuKhamFocusGained

    private void txtMaPhieuKhamFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMaPhieuKhamFocusLost

    }//GEN-LAST:event_txtMaPhieuKhamFocusLost

    private void txtYeuCauKhamFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtYeuCauKhamFocusGained

    }//GEN-LAST:event_txtYeuCauKhamFocusGained

    private void txtYeuCauKhamFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtYeuCauKhamFocusLost

    }//GEN-LAST:event_txtYeuCauKhamFocusLost

    private void btnXoaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnXoaMouseEntered
        setBackround(new Color(255, 204, 204), Color.white, btnXoa);
    }//GEN-LAST:event_btnXoaMouseEntered

    private void btnXoaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnXoaMouseExited
        setBackround(new Color(0, 102, 0), Color.white, btnXoa);
    }//GEN-LAST:event_btnXoaMouseExited

    private void btnCapNhatMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCapNhatMouseEntered
        setBackround(new Color(255, 204, 204), Color.white, btnCapNhat);
    }//GEN-LAST:event_btnCapNhatMouseEntered

    private void btnCapNhatMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCapNhatMouseExited
        setBackround(new Color(0, 102, 0), Color.white, btnCapNhat);
    }//GEN-LAST:event_btnCapNhatMouseExited

    private void btnHuyMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHuyMouseEntered
        setBackround(new Color(255, 204, 204), Color.white, btnHuy);
    }//GEN-LAST:event_btnHuyMouseEntered

    private void btnHuyMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHuyMouseExited
        setBackround(new Color(0, 102, 0), Color.white, btnHuy);
    }//GEN-LAST:event_btnHuyMouseExited

    private void tblLapPhieuKhamMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblLapPhieuKhamMouseMoved
        tblLapPhieuKham.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_tblLapPhieuKhamMouseMoved

    private void cboBaSiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboBaSiActionPerformed


    }//GEN-LAST:event_cboBaSiActionPerformed

    private void cboBaSiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cboBaSiMouseClicked

    }//GEN-LAST:event_cboBaSiMouseClicked

    private void txtNgayKhamFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNgayKhamFocusLost
        if (txtNgayKham.getText().trim().isEmpty()) {
            Color(txtNgayKham, "VD: 16/04/2021 ", Italic, Gray);
        }
    }//GEN-LAST:event_txtNgayKhamFocusLost

    private void txtNgayKhamFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNgayKhamFocusGained
        if (txtNgayKham.getForeground().equals(Gray)) {
            Color(txtNgayKham, "", Plain, Black);
        }
    }//GEN-LAST:event_txtNgayKhamFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LapPhieuKhamJdialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LapPhieuKhamJdialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LapPhieuKhamJdialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LapPhieuKhamJdialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                LapPhieuKhamJdialog dialog = new LapPhieuKhamJdialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCapNhat;
    private javax.swing.JButton btnHuy;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cboBaSi;
    private javax.swing.JComboBox<String> cboMPKhamToa;
    private javax.swing.JComboBox<String> cboMaTC;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbkNhanVien;
    private javax.swing.JLabel lblBacSi;
    private javax.swing.JLabel lblMaDV;
    private javax.swing.JLabel lblMaPK;
    private javax.swing.JLabel lblMaPKToa;
    private javax.swing.JLabel lblMaTC;
    private javax.swing.JLabel lblNgayKham;
    private javax.swing.JLabel lblYeUCauKham;
    private javax.swing.JTable tblLapPhieuKham;
    private javax.swing.JTextField txtMaPhieuKham;
    private javax.swing.JTextField txtNgayKham;
    private javax.swing.JTextField txtNhanVien;
    private javax.swing.JTextField txtYeuCauKham;
    // End of variables declaration//GEN-END:variables
PhieuKhamDao dao = new PhieuKhamDao();



    int row = -1;

    public void init() {
        this.setTitle("PHIẾU KHÁM");
        this.setLocationRelativeTo(null);
        this.setIconImage(ImageHelper.getAppIcon());
         txtNhanVien.setText(Auth.user.getMaNV());
         txtNhanVien.setEnabled(false);
         
        this.cboMaTC();
        this.fillTable();
       
        this.cboBacSi();
        this.cboMaPKToa();
        this.row = -1;

    }

    void fillTable() {//Đỗ dữ liệu vào bảng tblHocViẹn

        DefaultTableModel model = (DefaultTableModel) tblLapPhieuKham.getModel();
        model.setRowCount(0);// xóa tất cả các hàng trên Jtable
        try {

            List<PhieuKham> list = dao.selectAll();// đọc cơ sở dữ liệu//selectALL:duyệt toàn bộ nhân viên

            for (PhieuKham PK : list) {
                Object[] row = {
                    PK.getMaPK(),
                    PK.getYeuCauKham(),
                    XDate.toString(PK.getNgayKham()),
                    PK.getMaBS(),
                    PK.getMaNV(),
                    PK.getMaTC(),
                    PK.getMaPKToa(),};

                model.addRow(row);// Thêm một hàng vào Jtable
            }

        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!" + e);
        }
    }

    void setForm(PhieuKham PK) {
        cboBaSi.setSelectedItem(PK.getMaBS());
        //txtMaBS.setText(PK.getMaBS());
        txtMaPhieuKham.setText(PK.getMaPK());
        cboMaTC.setSelectedItem(PK.getMaTC());
        txtYeuCauKham.setText(PK.getYeuCauKham());
        txtNhanVien.setText(PK.getMaNV());
        txtNgayKham.setText(XDate.toString(PK.getNgayKham()));
        cboMPKhamToa.setSelectedItem(PK.getMaPKToa());
        ///    lblMaDV.setText(String.valueOf(PK.getMaDV()));
    }

    void edit() {
        String matc = (String) tblLapPhieuKham.getValueAt(this.row, 0);
        PhieuKham tc = dao.selectById(matc);
        this.setForm(tc);

    }

    PhieuKham getForm() {

        PhieuKham tc = new PhieuKham();
        tc.setMaPK(txtMaPhieuKham.getText());
        tc.setYeuCauKham(txtYeuCauKham.getText());
        tc.setMaPKToa((String) cboMPKhamToa.getSelectedItem());
        tc.setNgayKham(XDate.toDate(txtNgayKham.getText()));

        tc.setMaBS((String) cboBaSi.getSelectedItem());
        // tc.setMaBS(txtMaBS.getText());
        tc.setMaNV(txtNhanVien.getText());
        tc.setMaTC((String) cboMaTC.getSelectedItem());
        // tc.setMaDV(Integer.valueOf(lblMaDV.getText()));

        return tc;

    }

    void clearForm() {
        PhieuKham tc = new PhieuKham();
        // nh.setMaTC(Auth.user.getMaNV());
        this.setForm(tc);
        txtNhanVien.setEnabled(true);
        btnThem.setEnabled(true);
        cboMaTC.setSelectedIndex(0);
        cboBaSi.setSelectedIndex(0);
        cboMPKhamToa.setSelectedIndex(0);
//        txtNgayKham.setText("");

    }

    void insert() {
        PhieuKham tc = getForm();
        try {
            dao.insert(tc);
            this.fillTable();
            this.clearForm();
            MsgBox.alert(this, "Thêm mới thành công");
            txtNgayKham.setText("");
        } catch (Exception e) {
            MsgBox.alert(this, "Thêm mới thất bại!" + e);
        }
    }

    void update() {
        PhieuKham nh = getForm();
        try {
            dao.update(nh);
            this.fillTable();
            MsgBox.alert(this, "Cập nhật thành công!");
        } catch (Exception e) {
            MsgBox.alert(this, "Cập nhật thất bại!");
        }
    }

    void delete() {
        if (!Auth.isManager()) {
            MsgBox.alert(this, "Bạn không quyền xoá Phiếu khám này");
        } else if (MsgBox.confirm(this, "Bạn thực sự muốn xoá Phiếu khám này?")) {
            try {
                String maPK = txtMaPhieuKham.getText();
                dao.delete(maPK);
                this.fillTable();
                this.clearForm();
                MsgBox.alert(this, "Xoá thành công");
            } catch (Exception e) {
                MsgBox.alert(this, "Xoá thất bại" + e);
            }

        }// 
    }

    void cboBacSi() {
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            con1 = DriverManager.getConnection(dburl, username1, password);
            Statement stm = con1.createStatement();
            rs1 = stm.executeQuery("select MaBS from Bacsi");
            while (rs1.next()) {
                String name = rs1.getString("MaBS");
                cboBaSi.addItem(name);
            }
            con1.close();
        } catch (ClassNotFoundException | SQLException e) {
            MsgBox.alert(this, "Truy vấn dữ liệu!" + e);
        }
    }

    public boolean check_Form() {
        if (cboBaSi.getSelectedIndex() == 0) {
            MsgBox.alert(this, "*Bạn phải chọn Mã Bác sĩ! \n");
            cboBaSi.setSelectedIndex(0);
            cboBaSi.requestFocus();
            cboBaSi.setBackground(Color.yellow);
            return false;
        } else {
            cboBaSi.setBackground(Color.gray);
        }
        if (cboMaTC.getSelectedIndex() == 0) {
            MsgBox.alert(this, "*Bạn phải chọn Mã Thú cưng! \n");
            cboMaTC.setSelectedIndex(0);
            cboMaTC.requestFocus();
            cboMaTC.setBackground(Color.yellow);
            return false;
        } else {
            cboMaTC.setBackground(Color.gray);
        }
        if (txtMaPhieuKham.getText().equals("")) {
            txtMaPhieuKham.requestFocus();
            txtMaPhieuKham.setBackground(Color.red);
            txtMaPhieuKham.setForeground(Color.BLUE);
            MsgBox.alert(this, "*Bạn vui lòng nhập mã phiếu khám!");
            return false;
        } else {
            txtMaPhieuKham.setBackground(Color.white);
        }
        if (txtYeuCauKham.getText().equals("")) {
            txtYeuCauKham.setBackground(Color.red);
            txtYeuCauKham.requestFocus();
            txtYeuCauKham.setForeground(Color.BLUE);
            MsgBox.alert(this, "*Bạn vui lòng nhập yêu cầu khám!");
            return false;
        } else {
            txtYeuCauKham.setBackground(Color.white);
        }
        if (cboMPKhamToa.getSelectedIndex() == 0) {
            MsgBox.alert(this, "*Bạn phải chọn Mã phiếu khám toa! \n");
            cboMPKhamToa.setSelectedIndex(0);
            cboMPKhamToa.requestFocus();
            cboMPKhamToa.setBackground(Color.yellow);
            return false;
        } else {
            cboMPKhamToa.setBackground(Color.gray);
        }

        if (txtNgayKham.getText().equals("")) {
            txtNgayKham.setBackground(Color.red);
            txtNgayKham.requestFocus();
            txtNgayKham.setForeground(Color.BLUE);
            MsgBox.alert(this, "*Bạn vui lòng nhập Ngày khám!");
            return false;
        } else {
            txtNgayKham.setBackground(Color.white);
        }
        if ((txtNgayKham.getText().length() != 10)) {
            txtNgayKham.requestFocus();
            txtNgayKham.setBackground(Color.yellow);
            txtNgayKham.setForeground(Color.BLUE);
            MsgBox.alert(this, "Định dạng ngày nhập vào chưa chính xác!");
            return false;
        } else {
            txtNgayKham.setBackground(Color.white);
        }
        if (txtNhanVien.getText().equals("")) {
            txtNhanVien.setBackground(Color.red);
            txtNhanVien.setForeground(Color.BLUE);
            txtNhanVien.requestFocus();
            MsgBox.alert(this, "*Bạn vui lòng nhập Mã Nhân Viên!");
            return false;
        } else {
            txtNhanVien.setBackground(Color.white);
        }

        return true;

    }

    void cboMaPKToa() {
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            con1 = DriverManager.getConnection(dburl, username1, password);
            Statement stm = con1.createStatement();
            rs1 = stm.executeQuery("select MaPKToa from Toathuoc");
            while (rs1.next()) {
                String name = rs1.getString("MaPKToa");
                cboMPKhamToa.addItem(name);
            }
            con1.close();
        } catch (ClassNotFoundException | SQLException e) {
            MsgBox.alert(this, "Truy vấn dữ liệu lỗi" + e);
        }
    }

    void cboMaTC() {
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            con1 = DriverManager.getConnection(dburl, username1, password);
            Statement stm = con1.createStatement();
            rs1 = stm.executeQuery("select MaTC from Thucung");
            while (rs1.next()) {
                String name = rs1.getString("MaTC");
                cboMaTC.addItem(name);
            }
            con1.close();
        } catch (ClassNotFoundException | SQLException e) {
             MsgBox.alert(this, "Truy vấn dữ liệu lỗi" + e);
            
        }
    }
}
